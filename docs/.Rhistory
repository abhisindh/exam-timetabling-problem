print(hello)
print("hello")
library(datasets)  # Load built-in datasets
head(iris)         # Show the first six lines of iris data
summary(iris)      # Summary statistics for iris data
plot(iris)         # Scatterplot matrix for iris data
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
cat("\014")
cat("\014")
plot(iris)         # Scatterplot matrix for iris data
# File:   InstallingR.R
# Course: R: An Introduction (with RStudio)
# LOAD DATA ################################################
library(datasets)  # Load built-in datasets
# SUMMARIZE DATA ###########################################
head(iris)         # Show the first six lines of iris data
summary(iris)      # Summary statistics for iris data
plot(iris)         # Scatterplot matrix for iris data
available.packages()
available.packages()
installed.packages()
x <- 1.5
class(x)
x <- 2
class(x)
x <- 2L
class(x)
x <- "hello"
class(x)
x <- 1+2i
class(x)
x <- c(1, 2, 3, 4, 5)
class(x)
is.atomic(x)
x <- c(1, 2, 3, 4, 5L)
class(x)
is.atomic(x)
x <- c(1, 2, 3, 4, "hello")
class(x)
is.atomic(x)
x <- c(1, 2, 3, 4, "hello", TRUE)
class(x)
is.atomic(x)
msc <- data.frame(
roll = c(101, 102, 103, 104),
name = c("a", "b", "c", "d"),
s1 = c(100, 99, 100, 99),
s2 = c(99, 100, 99, 100),
g = c("s", "s", "s", "s")
)
print(msc)
msc$roll
msc$name
msc$s1
msc$s2
msc$g
msc[2,]
msc[,3]
plot(msc)
m = matrix(data=(1, 2, 3, 4, 5, 6), nrow=3, ncol=2, byrow=T)
m = matrix(data=c(1, 2, 3, 4, 5, 6), nrow=3, ncol=2, byrow=T)
m
sum(m)
mean(m)
typeof(x)
x=1.5
typeof(x)
class(x)
y = 2L
typeof(y)
class(y)
z = "Abhisindh"
typeof(z)
class(z)
l <- FALSE
typeof(l)
class(l)
x = c(1, 2, 3, 4)
typeof(x)
class(x)
v = c(1, T, "c")
typeof(v)
class(v)
v = c(1, T, "c", 1)
typeof(v)
class(v)
a = c(1, 2, 3, 4, 5)
a+b
b = c(2, 4, 6)
a+b
a = c(1, 2, 3, 4, 5, 6)
b = c(2, 4, 6)
a+b
a*b
b*a
a%%b
a%/%b
b%%a
b%/%a
5%%2
5%/%2
cla
cls
clear
c<-scan()
if (c>5){
print(paste(c, "is greater than 5"))
}
if (c%%2){
print(paste(c,"is even number"))
}
if (c%%2==0){
print(paste(c, "is even number"))
}
c<-scan()
if (c%%2==0){}
if (c%%2==0){
print(paste(c," is an even number"))
}else{
print(paste(c, " is an odd number"))
}
n=scan()
fact<-1
for (i in 1:n){
fact = fact*i
}
print(paste(fact, "is the factorial of ", n))
# Creating a sample dataframe
# Assuming mf dataset
mf <- data.frame(
Length = rnorm(100, mean = 10, sd = 2),
Speed = rnorm(100, mean = 5, sd = 1),
Algae = rnorm(100, mean = 15, sd = 3)
)
# Assuming Nile dataset
Nile <- data.frame(
Year = 1871:1970,
Flow = runif(100, min = 200, max = 1200)
)
# Assuming rainfall dataset
rainfall <- data.frame(
Month = month.name,
Rain = runif(12, min = 50, max = 200)
)
# Assuming data11 and data8 datasets
data8 <- c("Category A", "Category B", "Category C", "Category D", "Category E", "Category F")
data11 <- runif(6, min = 10, max = 50)
# Assuming fw dataset
fw <- data.frame(
count = c(20, 30, 15, 25),
type = c("Type A", "Type B", "Type C", "Type D")
)
# Assuming bird dataset
bird <- data.frame(
"Great Tit" = c(10, 15, 20),
"Blue Tit" = c(8, 12, 18),
"Robin" = c(5, 10, 15)
)
# Assuming data2 dataset
data2 <- rnorm(100, mean = 50, sd = 10)
plot(mf)
?pairs
example(pairs)
?plot
example(plot)
example(dot)
?dot
getwd()
setwd("C:\Users\abhis\OneDrive\Desktop\Exam Timetabling Problem\docs")
setwd("C:/Users/abhis/OneDrive/Desktop/Exam Timetabling Problem/docs")
getwd()
library(readxl)
observations2 <- read_excel("observations2.xlsx")
View(observations2)
install.packages(readr)
install.packages("readr")
load(observations2)
observations2
plot(observations2)
plot(observations2)
install.packages("ggplot2")
install.packages("dplyr")
library(ggplot2)
library(dplyr)
# Group by 'Group' column and summarize (optional)
summary_df <- observations2 %>%
group_by("File Name") %>%
summarize(
Mean_X = mean(X),
Mean_Y = mean(Y)
)
summary_df <- observations2 %>%
group_by("File Name") %>%
summarize(
Mean_X = mean(X),
Mean_Y = mean(Y)
)
head(observations2)
# Plotting
ggplot(df, aes(x = X, y = Y, color = Group)) +
geom_point() +
facet_wrap(~ Group, scales = "free") +  # Separate plots for each group
labs(x = "X-axis label", y = "Y-axis label", title = "Scatter Plot by Group")
# Plotting
ggplot(observations2, aes(x = X, y = Y, color = Group)) +
geom_point() +
facet_wrap(~ Group, scales = "free") +  # Separate plots for each group
labs(x = "X-axis label", y = "Y-axis label", title = "Scatter Plot by Group")
ggplot(observations2, aes(x = "Elapsed Time (seconds)", y = "Improvement", color = Group)) +
geom_point() +
facet_wrap(~ Group, scales = "free") +  # Separate plots for each group
labs(x = "X-axis label", y = "Y-axis label", title = "Scatter Plot by Group")
ggplot(observations2, aes(x = "Elapsed Time (seconds)", y = "Improvement", color = "File Name")) +
geom_point() +
facet_wrap(~ Group, scales = "free") +  # Separate plots for each group
labs(x = "X-axis label", y = "Y-axis label", title = "Scatter Plot by Group")
ggplot(observations2, aes(x = "Elapsed Time (seconds)", y = "Improvement", color = "File Name")) +
geom_point() +
facet_wrap(~ "File Name", scales = "free") +  # Separate plots for each group
labs(x = "X-axis label", y = "Y-axis label", title = "Scatter Plot by Group")
# Plotting
ggplot(observations2, aes(x = Elapsed Time (seconds), y = Improvement, color = File Name)) +
# Plotting
ggplot(observations2, aes(x = `Elapsed Time (seconds)`, y = Improvement, color = `File Name`)) +
geom_point() +
facet_wrap(~ "File Name", scales = "free") +  # Separate plots for each group
labs(x = "X-axis label", y = "Y-axis label", title = "Scatter Plot by Group")
library(ggplot2)
# Plotting
ggplot(observations2, aes(x = `Elapsed Time (seconds)`, y = Improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "Elapsed Time (seconds)", y = "Improvement", title = "Line Graph by File Name") +
facet_wrap(~ `File Name`, scales = "free")
# Plotting
ggplot(observations2, aes(x = `feasible size`, y = Improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "Elapsed Time (seconds)", y = "Improvement", title = "Line Graph by File Name") +
facet_wrap(~ `File Name`, scales = "free")
# Plotting
ggplot(observations2, aes(x = `feasible size`, y = Improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "feasible size", y = "Improvement", title = "feasible size - improvement") +
facet_wrap(~ `File Name`, scales = "free")
load("C:/Users/abhis/OneDrive/Desktop/Exam Timetabling Problem/docs/observations2.csv")
install.packages("ggplot2")
install.packages("dplyr")
library(ggplot2)
library(dplyr)
# Plotting
ggplot(observations2, aes(x = `feasible size`, y = Improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "feasible size", y = "Improvement", title = "feasible size - improvement") +
facet_wrap(~ `File Name`, scales = "free")
getwd()
load("C:/Users/abhis/OneDrive/Desktop/Exam Timetabling Problem/docs/observations2.csv")
load("C:/Users/abhis/OneDrive/Desktop/Exam Timetabling Problem/docs/observations2.csv")
View(observations2)
load("C:/Users/abhis/OneDrive/Desktop/Exam Timetabling Problem/docs/observations2.csv")
load("C:/Users/abhis/OneDrive/Desktop/Exam Timetabling Problem/docs/observations2.csv")
observations2 <- read.csv("C:/Users/abhis/OneDrive/Desktop/Exam Timetabling Problem/docs/observations2.csv")
View(observations2)
# Plotting
ggplot(observations2, aes(x = `Elapsed Time (seconds)`, y = Improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "Elapsed Time (seconds)", y = "Improvement", title = "Line Graph by File Name") +
facet_wrap(~ `File Name`, scales = "free")
install.packages("ggplot2")
install.packages("dplyr")
library(ggplot2)
library(dplyr)
v=# Load necessary library
library(ggplot2)
library(dplyr)
# Plotting
ggplot(observations2, aes(x = `Elapsed Time (seconds)`, y = Improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "Elapsed Time (seconds)", y = "Improvement", title = "Line Graph by File Name") +
facet_wrap(~ `File Name`, scales = "free")
# Plotting
ggplot(observations2, aes(x = `Elapsed.Time..seconds.`, y = Improvement, color = `File Name`, group = `File.Name`)) +
geom_line() +
labs(x = "Elapsed Time (seconds)", y = "Improvement", title = "Line Graph by File Name") +
facet_wrap(~ `File.Name`, scales = "free")
# Plotting
ggplot(observations2, aes(x = `Elapsed.Time..seconds.`, y = Improvement, color = `File Name`, group = `File.Name`)) +
geom_line() +
labs(x = "Elapsed Time (seconds)", y = "Improvement", title = "Line Graph by File Name") +
facet_wrap(~ `File.Name`, scales = "free")
load(observations2)
load("observations2")
observations2
# Plotting
ggplot(observations2, aes(x = `feasible size`, y = Improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "feasible size", y = "Improvement", title = "feasible size - improvement") +
facet_wrap(~ `File Name`, scales = "free")
# Plotting
ggplot(observations2, aes(x = `feasible size`, y = Improvement, color = `File.Name`, group = `File Name`)) +
geom_line() +
labs(x = "feasible size", y = "Improvement", title = "feasible size - improvement") +
facet_wrap(~ `File Name`, scales = "free")
# Plotting
ggplot(observations2, aes(x = `feasible size`, y = Improvement, color = `File.Name`, group = `File Name`)) +
geom_line() +
labs(x = "feasible size", y = "Improvement", title = "feasible size - improvement") +
facet_wrap(~ `File.Name`, scales = "free")
# Plotting
ggplot(observations2, aes(x = `feasible.size`, y = Improvement, color = `File.Name`, group = `File Name`)) +
geom_line() +
labs(x = "feasible size", y = "Improvement", title = "feasible size - improvement") +
facet_wrap(~ `File.Name`, scales = "free")
rlang::last_trace()
library(readxl)
observations3 <- read_excel("observations/observations3.xlsx")
View(observations3)
# Plotting
ggplot(observations2, aes(x = `Elapsed Time (seconds)`, y = Improvement, color = `File Name`)) +
geom_point() +
facet_wrap(~ "File Name", scales = "free") +  # Separate plots for each group
labs(x = "X-axis label", y = "Y-axis label", title = "Scatter Plot by Group")
# Plotting
ggplot(observations3, aes(x = `Elapsed Time (seconds)`, y = Improvement, color = `File Name`)) +
geom_point() +
facet_wrap(~ "File Name", scales = "free") +  # Separate plots for each group
labs(x = "X-axis label", y = "Y-axis label", title = "Scatter Plot by Group")
# Plotting
ggplot(observations3, aes(x = `feasible size`, y = Improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "feasible size", y = "Improvement", title = "feasible size - improvement") +
facet_wrap(~ `File Name`, scales = "free")
observations2 <- within(observations2, {
relative_improvement <- Improvement / `Initial Soft Constraints`
})
observations3 <- within(observations2, {
relative_improvement <- Improvement / `Initial Soft Constraints`
})
observations3 <- within(observations3, {
relative_improvement <- Improvement / `Initial Soft Constraints`
})
# Plotting
ggplot(observations3, aes(x = `feasible size`, y = Improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "feasible size", y = "relative_improvement", title = "feasible size - improvement") +
facet_wrap(~ `File Name`, scales = "free")
# Plotting
ggplot(observations3, aes(x = `feasible size`, y = relative_improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "feasible size", y = "relative_improvement", title = "feasible size - improvement") +
facet_wrap(~ `File Name`, scales = "free")
View(observations3)
observations2 %>%
group_by(`File Name`) %>%
summarise(
count_non_zero_improvements = sum(Improvement != 0, na.rm = TRUE),
total_count = n()
)
observations3 %>%
group_by(`File Name`) %>%
summarise(
count_non_zero_improvements = sum(Improvement != 0, na.rm = TRUE),
total_count = n()
)
# Plotting
ggplot(observations2, aes(x = `Elapsed.Time..seconds.`, y = Improvement, color = `File Name`, group = `File.Name`)) +
geom_line() +
labs(x = "Elapsed Time (seconds)", y = "Improvement", title = "Line Graph by File Name") +
facet_wrap(~ `File.Name`, scales = "free")
# Plotting
ggplot(observations3, aes(x = `Elapsed.Time..seconds.`, y = Improvement, color = `File Name`, group = `File.Name`)) +
geom_line() +
labs(x = "Elapsed Time (seconds)", y = "Improvement", title = "Line Graph by File Name") +
facet_wrap(~ `File.Name`, scales = "free")
# Plotting
ggplot(observations3, aes(x = `Elapsed Time (seconds)`, y = Improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "Elapsed Time (seconds)", y = "Improvement", title = "Line Graph by File Name") +
facet_wrap(~ `File.Name`, scales = "free")
# Plotting
ggplot(observations3, aes(x = `feasible size`, y = relative_improvement, color = `File Name`, group = `File Name`)) +
geom_line() +
labs(x = "feasible size", y = "relative_improvement", title = "feasible size - improvement") +
facet_wrap(~ `File Name`, scales = "free")
observations3 %>%
group_by(`File Name`) %>%
summarise(
average_time= median(Timestamp),
total_count = n()
)
observations3 %>%
group_by(`File Name`) %>%
summarise(
average_time= median(`Elapsed Time (seconds)`),
total_count = n()
)
